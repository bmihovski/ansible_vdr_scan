---
# tasks file for vdr_install
- name: Update apt cache
  apt:
    update_cache: true
  ignore_errors: true

- name: Install dependencies
  apt:
    name: '{{ item }}'
    update_cache: true
  with_items:
    - build-essential
    - libcap-dev
    - libfontconfig1-dev
    - gettext
    - libncursesw5-dev
    - libncurses5-dev
    - libmagick++-dev
    - libcxxtools-dev
    - dialog
    - dvb-apps
    - libdvbcsa-dev
    - libcrypto++-dev
    - libssl-dev
    - libsystemd-daemon-dev
    - python-pip
    - htop
    - macchanger
    
- name: Copy macchanger script in place
  copy:
    src: files/macchanger/macchanger
    dest: /etc/network/if-pre-up.d/
    mode: 0775

- name: Install pyexpect from pip
  pip:
    name: pexpect
    
- name: Downloas DVB-S adapter firmware
  get_url:
    url: https://github.com/LibreELEC/dvb-firmware/raw/master/firmware/dvb-demod-m88ds3103.fw
    dest: /lib/firmware/
    
- name: Download DVB-C driver
  get_url:
    url: 'http://sundtek.de/media/sundtek_netinst.sh'
    dest: /tmp
    mode: 0775
    
- name: Install DVB-C driver
  expect:
   command: '/tmp/sundtek_netinst.sh'
   responses:
     Restriktionen verwendet werden: 'Y'

- name: Download and extract latest VDR
  unarchive:
    src: 'ftp://ftp.tvdr.de/vdr/{{ vdr_ver }}.tar.bz2'
    dest: '/usr/local/src/'
    remote_src: true
    
- name: Create symlink to VDR source
  file:
    src: '/usr/local/src/{{ vdr_ver }}'
    dest: '{{ vdr_target_src_dir }}'
    state: link
    
- name: Check extracted vdr is complete
  stat:
    path: '{{ vdr_target_src_dir }}/Make.config.template'
  register: vdr_complete
  
- name: Assert vdr complete
  assert:
    that:
      - vdr_complete.stat.exists
    msg: 'VDR structure is malformed'
    
- name: Copy VDR compile conf
  copy:
    remote_src: true
    src: '{{ vdr_target_src_dir }}/Make.config.template'
    dest: '{{ vdr_target_src_dir }}/Make.config'

- name: Cleanup VDR in case is already installed
  make: 
    chdir: '{{ vdr_target_src_dir }}'
    target: clean
    params:
      LIBDVBCSA: 1
    
- name: Compile VDR
  make: 
    chdir: '{{ vdr_target_src_dir }}'
    params:
      LIBDVBCSA: 1
  
- name: Clone VDR plugins
  git:
    dest: '{{ vdr_target_plugins_src }}/{{ item[0] }}'
    repo: '{{ item[1] }}'
  with_together:
    - [ 'restfulapi', 'streamdev', 'vnsiserver', 'dvbapi' ]
    - [ 'https://github.com/yavdr/vdr-plugin-restfulapi.git', 'git://projects.vdr-developer.org/vdr-plugin-streamdev.git',
        'https://github.com/FernetMenta/vdr-plugin-vnsiserver.git', 'https://github.com/manio/vdr-plugin-dvbapi.git' ]
    
- name: Compile VDR plugins
  make: 
    chdir: '{{ vdr_target_src_dir }}'
    target: install-plugins
    params:
      LIBDVBCSA: 1

- name: Install VDR 
  make: 
    chdir: '{{ vdr_target_src_dir }}'
    target: install
    params:
      LIBDVBCSA: 1
      
- name: Copy streamdev-server config
  copy:
    src: files/vdr/plugins/streamdev-server/
    dest: '{{ vdr_lib_dir }}/plugins/streamdev-server/'

- name: Copy vnsiserver config
  copy:
    src: files/vdr/plugins/vnsiserver/
    dest: '{{ vdr_lib_dir }}/plugins/vnsiserver/'
    
- name: Install Oscam
  include_role:
    name: oscam_install
    
- name: Copy VDR executable script
  copy:
    src: files/vdr/run/runvdr
    dest: /usr/local/bin/
    mode: 0775
   
- name: Copy VDR startup config
  copy:
    src: files/vdr/conf.d/vdr.conf
    dest: /etc/vdr/conf.d
    
- name: Copy VDR system.d script
  copy:
    src: 'files/vdr/system.d/vdr.service'
    dest: /etc/systemd/system
    
- name: Copy VDR diseqc conf
  copy:
    src: 'files/vdr/vdr_lib/diseqc.conf'
    dest: '{{ vdr_lib_dir }}'
    
- name: Reload systemd configuration
  command: systemctl daemon-reload
  
- name: Start and enable VDR
  service:
    name: vdr
    state: started
    enabled: true

- name: Wait 300 seconds for VDR port 3000 to become closed on the host, don't start checking for 10 seconds
  wait_for:
    port: 3000
    delay: 10
    state: started
  
- name: Stop VDR to proceed reconfiguration
  service:
    name: vdr
    state: stopped
    
- name: Check filter file content
  slurp:
    src: '{{ vdr_lib_dir }}/setup.conf'
  register: setup_conf_content
  
- name: Setup EPG fix level
  replace:
    path: '{{ vdr_lib_dir }}/setup.conf'
    regexp: '^EPGBugfixLevel = 3$'
    replace: 'EPGBugfixLevel = 0'

- name: Enable Diseqc vdr setup
  replace:
    path: '{{ vdr_lib_dir }}/setup.conf'
    regexp: '^DiSEqC = 0$'
    replace: 'DiSEqC = 1'

- name: Disable vdr channel scan
  replace:
    path: '{{ vdr_lib_dir }}/setup.conf'
    regexp: '^UpdateChannels = 5$'
    replace: 'UpdateChannels = 2'
  
- name: Insert plugins config
  blockinfile:
    path: '{{ vdr_lib_dir }}/setup.conf'
    block: |
      dvbapi.LogLevel = 0
      dvbapi.OSCamHost = 127.0.0.1
      dvbapi.OSCamNetwork = 1
      dvbapi.OSCamPort = 2000
      streamdev-server.AllowSuspend = 1
      streamdev-server.LiveBufferMs = 900
      streamdev-server.StartServer = 0
      streamdev-server.StartVTPServer = 0
      streamdev-server.SuspendMode = 1
    insertafter: 'ZapTimeout = 3'
  when: "'dvbapi.LogLevel = 0' not in setup_conf_content.content | b64decode"

- name: Check filter file content
  slurp:
    src: '{{ vdr_lib_dir }}/setup.conf'
  register: setup_conf_content_applied

- name: Assert filter content
  assert:
    that:
      - "'dvbapi.LogLevel = 0' in setup_conf_content_applied.content | b64decode"
    msg: 'File content must be as the expected'

- name: Assert diseqc enabled
  assert:
    that:
      - "'DiSEqC = 1' in setup_conf_content_applied.content | b64decode"
    msg: 'File content must be as the expected'
 
- name: Insert Bulgaria sat to vdr sources
  lineinfile:
    path: '{{ vdr_lib_dir }}/sources.conf'
    insertbefore: '^S3E     Eutelsat 3A/3D & Rascom 1R$'
    line: 'S1.9E   Bulgariasat'
    
- name: Check filter file content of sources.conf
  slurp:
    src: '{{ vdr_lib_dir }}/sources.conf'
  register: sources_conf_content_applied
 
- name: Assert Bulgaria sat added
  assert:
    that:
      - "'S1.9E   Bulgariasat' in sources_conf_content_applied.content | b64decode"
    msg: 'File content must be as the expected'
    
- name: Start and enable VDR with new config
  service:
    name: vdr
    state: started
...    