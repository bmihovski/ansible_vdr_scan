---
# tasks file for vdr_install
- name: Update apt cache
  apt:
    update_cache: true
  ignore_errors: true

- name: Install dependencies
  apt:
    name: '{{ item }}'
    update_cache: true
  with_items:
    - build-essential
    - libcap-dev
    - libfontconfig1-dev
    - gettext
    - libncursesw5-dev
    - libncurses5-dev
    - libmagick++-dev
    - libcxxtools-dev
    - dialog
    - dvb-apps
    - libdvbcsa-dev
    - libcrypto++-dev
    - libssl-dev
    - libsystemd-daemon-dev
    - python-pexpect
    - python-pip
    - htop
    - macchanger
    
- name: Copy macchanger script in place
  copy:
    src: files/macchanger/macchanger
    dest: /etc/network/if-pre-up.d/
    mode: 0775

- name: Upgrade pyexpect from pip
  pip:
    name: pyexpect
    state: latest
    
- name: Transfer DVB-S adapter firmware
  copy:
    src: files/firmware/dvb-demod-m88ds3103.fw
    dest: /lib/firmware
    
- name: Download DVB-C driver
  get_url:
    url: 'http://sundtek.de/media/sundtek_netinst.sh'
    dest: /tmp
    mode: 0775
    
- name: Install DVB-C driver
  expect:
   command: '/tmp/sundtek_netinst.sh'
   responses:
     Restriktionen verwendet werden: 'Y'
    
- name: Create VDR source dir
  file:
    path: '{{ vdr_target_src_dir }}'
    state: directory
    
- name: Download and extract latest VDR
  unarchive:
    src: 'ftp://ftp.tvdr.de/vdr/{{ vdr_ver }}.tar.bz2'
    dest: '{{ vdr_target_src_dir }}'
    remote_src: true
    
- name: Copy VDR compile conf
  copy:
    src: 'files/vdr/compile/Make.config'
    dest: '{{ vdr_target_src_dir }}/{{ vdr_ver }}'

- name: Cleanup VDR in case is already installed
  make: 
    chdir: '{{ vdr_target_src_dir }}/{{ vdr_ver }}'
    target: clean
    params:
      LIBDVBCSA: 1
    
- name: Compile VDR
  make: 
    chdir: '{{ vdr_target_src_dir }}/{{ vdr_ver }}'
    params:
      NUM_THREADS: 3
      LIBDVBCSA: 1
  
- name: Clone VDR plugins
  git:
    dest: '{{ vdr_target_plugins_src }}/{{ item[0] }}'
    repo: '{{ item[1] }}'
  with_together:
    - [ 'restfulapi', 'dvbapi', 'streamdev', vnsiserver ]
    - [ 'https://github.com/yavdr/vdr-plugin-restfulapi.git', 'https://github.com/manio/vdr-plugin-dvbapi.git', 
        'git://projects.vdr-developer.org/vdr-plugin-streamdev.git', 'https://github.com/FernetMenta/vdr-plugin-vnsiserver.git' ]
    
- name: Compile VDR plugins
  make: 
    chdir: '{{ vdr_target_src_dir }}/{{ vdr_ver }}'
    target: install-plugins
    params:
      LIBDVBCSA: 1

- name: Install VDR 
  make: 
    chdir: '{{ vdr_target_src_dir }}/{{ vdr_ver }}'
    target: install
    params:
      LIBDVBCSA: 1
      
- name: Copy streamdev-server config
  copy:
    src: files/vdr/plugins/streamdev-server/
    dest: '{{ vdr_lib_dir }}/plugins/streamdev-server/'

- name: Copy vnsiserver config
  copy:
    src: files/vdr/plugins/vnsiserver/
    dest: '{{ vdr_lib_dir }}/plugins/vnsiserver/'
    
- name: Clone Oscam
  git:
    dest: '{{ oscam_src }}'
    repo: 'git://repo.or.cz/oscam.git'
    force: true
    
- name: Copy Oscam compile config
  copy:
    src: files/oscam/compile/config.h
    dest: '{{ oscam_src }}'
    
- name: Compile oscam
  make: 
    chdir: '{{ oscam_src }}'
    params:
      NUM_THREADS: 3  
      
- name: Create oscam symlink
  file:
    src: '{{ oscam_src }}/Distribution/oscam-1.20-unstable_svn0-arm-linux-gnueabihf'
    dest: /usr/local/bin/oscam
    force: true
    state: link
    
- name: Transfer oscam config
  copy:
    src: files/oscam/conf/
    dest: /usr/local/etc/
    
- name: Copy VDR executable script
  copy:
    src: files/vdr/run/runvdr
    dest: /usr/local/bin/
    mode: 0775
   
- name: Copy VDR startup config
  copy:
    src: files/vdr/conf.d/vdr.conf
    dest: /etc/vdr/conf.d
    
- name: Copy VDR and Oscam system.d scripts
  copy:
    src: '{{ item }}'
    dest: /etc/systemd/system
  with_items:
    - 'files/oscam/system.d/oscam.service'
    - 'files/vdr/system.d/vdr.service'
    
- name: Reload systemd configuration
  command: systemctl daemon-reload
  
- name: Start and enable VDR and Oscam
  service:
    name: '{{ item }}'
    state: started
    enabled: true
  with_items:
    - oscam
    - vdr
    
    